add_executable(bstcheck.c99 bstcheck.c)
add_executable(dctcheck.c99 dctcheck.c)
add_executable(fftcheck.c99 fftcheck.c)
add_executable(rfftcheck.c99 rfftcheck.c)
add_executable(fftlaptime.c99 fftlaptime.c)

target_include_directories(bstcheck.c99 PRIVATE ${CMAKE_SOURCE_DIR}/otfft)
target_include_directories(dctcheck.c99 PRIVATE ${CMAKE_SOURCE_DIR}/otfft)
target_include_directories(fftcheck.c99 PRIVATE ${CMAKE_SOURCE_DIR}/otfft)
target_include_directories(rfftcheck.c99 PRIVATE ${CMAKE_SOURCE_DIR}/otfft)
target_include_directories(fftlaptime.c99 PRIVATE ${CMAKE_SOURCE_DIR}/otfft)

if (CMAKE_CXX_COMPILER_ID MATCHES "Intel")
    target_compile_options(bstcheck.c99 PRIVATE /Qstd=c99)
    target_compile_options(dctcheck.c99 PRIVATE /Qstd=c99)
    target_compile_options(fftcheck.c99 PRIVATE /Qstd=c99)
    target_compile_options(rfftcheck.c99 PRIVATE /Qstd=c99)
    target_compile_options(fftlaptime.c99 PRIVATE /Qstd=c99)
elseif (CMAKE_CXX_COMPILER_ID MATCHES  "GNU|Clang")
    target_link_libraries(bstcheck.c99 m)
    target_link_libraries(dctcheck.c99 m)
    target_link_libraries(fftcheck.c99 m)
    target_link_libraries(rfftcheck.c99 m)
    target_link_libraries(fftlaptime.c99 m)
endif ()

target_link_libraries(bstcheck.c99 otfft)
target_link_libraries(dctcheck.c99 otfft)
target_link_libraries(fftcheck.c99 otfft)
target_link_libraries(rfftcheck.c99 otfft)
target_link_libraries(fftlaptime.c99 otfft)

set_target_properties(bstcheck.c99 PROPERTIES OUTPUT_NAME bstcheck)
set_target_properties(dctcheck.c99 PROPERTIES OUTPUT_NAME dctcheck)
set_target_properties(fftcheck.c99 PROPERTIES OUTPUT_NAME fftcheck)
set_target_properties(rfftcheck.c99 PROPERTIES OUTPUT_NAME rfftcheck)
set_target_properties(fftlaptime.c99 PROPERTIES OUTPUT_NAME fftlaptime)
